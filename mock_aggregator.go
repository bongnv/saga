package saga

import context "context"
import mock "github.com/stretchr/testify/mock"

// MockAggregator is an autogenerated mock type for the Aggregator type
type MockAggregator struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, tx
func (_m *MockAggregator) Execute(ctx context.Context, tx Transaction) (Transaction, error) {
	ret := _m.Called(ctx, tx)

	var r0 Transaction
	if rf, ok := ret.Get(0).(func(context.Context, Transaction) Transaction); ok {
		r0 = rf(ctx, tx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Transaction)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, Transaction) error); ok {
		r1 = rf(ctx, tx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
